//
// Created by Spencer Michaels on 8/28/18.
//

#ifndef XENDBG_DEBUGGERPV_HPP
#define XENDBG_DEBUGGERPV_HPP

#include <optional>
#include <memory>
#include <stdexcept>
#include <unordered_map>

#include <uvw.hpp>

#include <Xen/DomainPV.hpp>

#include "Debugger.hpp"

#define X86_INFINITE_LOOP 0xFEEB

namespace xd::dbg {

  class DebuggerPV : public DebuggerWithBreakpoints<uint16_t, X86_INFINITE_LOOP> {
  private:
    using InfiniteLoopMap = std::unordered_map<xen::Address, uint16_t>;

  public:
    DebuggerPV(uvw::Loop &loop, xen::DomainPV &domain);

    void continue_() override;
    xen::Address single_step() override;
    void on_breakpoint_hit(OnBreakpointHitFn on_breakpoint_hit) override;

  private:
    xen::DomainPV &_domain;

    std::optional<xen::Address> check_breakpoint_hit();
  };

}


#endif //XENDBG_DEBUGGERPV_HPP
